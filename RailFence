package RailFence;
import java.util.Scanner;

import javax.swing.JOptionPane;


public class Rail {

	//qeto prej ketu i din besoj
	
	public static void main(String[] args) {
	Scanner sc = new Scanner(System.in);
	
	System.out.println("Shkruani mesazhin për enkriptim/dekriptim:");
	String mesazhi = sc.nextLine();
	
	System.out.print("Jepni numrin e shiritave<rails>:");
	int railsNr = sc.nextInt();
	
	System.out.println("Zgjedhni veprimin (1-për Enkriptim, 2-për Dekriptim):");
	int veprimi = sc.nextInt();
	
	System.out.println("Zgjedhni formen e tekstit ne dalje (1-per rresht, 2-per shirita):");
	int show = sc.nextInt();
	
	if(veprimi == 1)
	{
		System.out.println("Mesazhi i enkriptuar: ");
		System.out.print(enkriptoRailFence(mesazhi, railsNr, show));
;	}
	else if(veprimi == 2)
	{
		System.out.println("Mesazhi i dekriptuar: ");
        System.out.print(dekriptoRailFence(mesazhi, railsNr, show));
	}
	else
	{
		System.out.println("Kontrolloni komandën e dhënë për veprimin e zgjedhur!");
	}
	
	//deri ketu

	}
	
	private static String enkriptoRailFence(String mesazhi, int shiritat, int show)
	{
		String mesazhiEn = mesazhi.replaceAll("\\s+", "");
		int gjatesiaM = mesazhiEn.length();
		String cipher ="";
		if(gjatesiaM > 0)
		{	
			int plotpjestimi = gjatesiaM % shiritat;
			if(plotpjestimi == 0)
			{
				int kolonat = gjatesiaM/shiritat;
				String[][] shkronjat = new String[shiritat][kolonat];
				int shkronjaRadhes = 0; 
				for(int i = 0; i< shiritat; i++)
				{
					for(int j = 0; j < kolonat; j++)
					{
						shkronjat[i][j]=String.valueOf(mesazhiEn.charAt(shkronjaRadhes));
						shkronjaRadhes = shkronjaRadhes + shiritat;
						if(j==kolonat-1)
						{
							shkronjaRadhes = i+1;
						}
						
					}
				}
				//System.out.println("Mesazhi i enkriptuar është:");
				if(show ==2)
				{
					for (int i = 0; i < shkronjat.length; i++) 
					{	
			            for (int j = 0; j < shkronjat[i].length; j++) {
			                cipher = cipher + shkronjat[i][j] + " "; 
					}
					cipher = cipher + "\n";
					}
				}
				else if(show ==1)
				{	
				for (int i = 0; i < shkronjat.length; i++) 
		            for (int j = 0; j < shkronjat[i].length; j++) 
		                cipher = cipher + shkronjat[i][j]; 
				}
				else
				{
					System.out.print("Gabim gjatë zgjedhjes së formatit të tekstit në dalje!");
				}
				
				
			}
			else
			{
				if(gjatesiaM < shiritat)
				{
					JOptionPane.showMessageDialog(null, "Gjatësia e mesazhit tuaj është më e vogël sesa numri i shiritave të zgjedhur!");			
				}
				else
				{
					
					String mesazhiPlotesuar = mesazhiEn + "w".repeat(shiritat - plotpjestimi);
					int kolonat = mesazhiPlotesuar.length()/shiritat;
					
					String[][] shkronjat = new String[shiritat][kolonat]; 
					int shkronjaRadhes = 0;
					for(int i = 0; i< shiritat; i++)
					{
						for(int j = 0; j < kolonat; j++)
						{
							shkronjat[i][j]=String.valueOf(mesazhiPlotesuar.charAt(shkronjaRadhes));
							shkronjaRadhes = shkronjaRadhes + shiritat;
							if(j==kolonat-1)
							{
								shkronjaRadhes = i+1;
							}
							
						}
					}
					//JOptionPane.showMessageDialog(null, "Mesazhi i enkriptuar është:");
					if(show ==2)
					{
						for (int i = 0; i < shkronjat.length; i++) 
						{	
				            for (int j = 0; j < shkronjat[i].length; j++) {
				                cipher = cipher + shkronjat[i][j] + " "; 
						}
						cipher = cipher + "\n";
						}
					}
					else if(show ==1)
					{	
					for (int i = 0; i < shkronjat.length; i++) 
			            for (int j = 0; j < shkronjat[i].length; j++) 
			                cipher = cipher + shkronjat[i][j]; 
					}
					else
					{
						System.out.print("Gabim gjatë zgjedhjes së formatit të tekstit në dalje!");
					}
				}
			 
			}
		}
		else 
		{
			JOptionPane.showMessageDialog(null, "Ju duhet të shkruani një mesazh për enkriptim!");
		}
		return cipher;
	}

	
	private static String dekriptoRailFence(String mesazhi, int shiritat, int show)
	{
		String mesazhiDe = mesazhi.replaceAll("\\s+", "");
		int gjatesiaM = mesazhiDe.length();
		String plain="";
		if(gjatesiaM > 0)
		{
			int rreshtat = gjatesiaM/shiritat;
			String[][] shkronjat = new String[rreshtat][shiritat]; 
			int shkronjaRadhes = 0;  
			for(int i = 0; i< rreshtat; i++)
			{
				for(int j = 0; j < shiritat; j++)
				{
					shkronjat[i][j]=String.valueOf(mesazhiDe.charAt(shkronjaRadhes));
					shkronjaRadhes = shkronjaRadhes + rreshtat;
					if(j==shiritat-1)
					{
						shkronjaRadhes = i+1; 
					}
					
				}
			}
			
			String mesazhiDekriptuar="";
			if(show==2)
			{
				for (int i = 0; i < shkronjat.length; i++) 
				{	
		            for (int j = 0; j < shkronjat[i].length; j++)
		            {
		                mesazhiDekriptuar = mesazhiDekriptuar + shkronjat[i][j] + " ";
		            }
		            mesazhiDekriptuar = mesazhiDekriptuar + "\n";
				}
				plain = mesazhiDekriptuar.replace("w", "");
			}
			else if(show==1){
	        for (int i = 0; i < shkronjat.length; i++) 
	            for (int j = 0; j < shkronjat[i].length; j++) 
	                mesazhiDekriptuar = mesazhiDekriptuar + shkronjat[i][j]; 
	        
	        plain = mesazhiDekriptuar.replace("w", "");
			}
			else
			{
				System.out.print("Gabim gjatë zgjedhjes së formatit të tekstit në dalje!");
			}
		}
		else
		{
			JOptionPane.showMessageDialog(null, "Ju duhet të shkruani një mesazh për enkriptim!");
		}
		return plain;
	}

}
