    public static boolean aEshteNr(String s)
    {
    	boolean rez = true;
    	int gjatesia = s.length();
    	if(gjatesia == 0)
    	{
    		rez = false;
    	}
    	else
    	{
    		for(int j = 0; j<gjatesia; j++)
    		{
    			rez = rez && Character.isDigit(s.charAt(j));
    		}
    	}
    	
    	
    	
		return rez;
    	
    }
    
    
    private static String enkriptoRailFence(String mesazhi, int shiritat, boolean show)
	{
		String mesazhiEn = mesazhi.replaceAll("\\s+", "");
		int gjatesiaM = mesazhiEn.length();
		String cipher ="";
		if(gjatesiaM > 0)
		{	
			int plotpjestimi = gjatesiaM % shiritat;
			if(plotpjestimi == 0)
			{
				int kolonat = gjatesiaM/shiritat;
				String[][] shkronjat = new String[shiritat][kolonat];
				int shkronjaRadhes = 0; 
				for(int i = 0; i< shiritat; i++)
				{
					for(int j = 0; j < kolonat; j++)
					{
						shkronjat[i][j]=String.valueOf(mesazhiEn.charAt(shkronjaRadhes));
						shkronjaRadhes = shkronjaRadhes + shiritat;
						if(j==kolonat-1)
						{
							shkronjaRadhes = i+1;
						}
						
					}
				}
				//System.out.println("Mesazhi i enkriptuar është:");
				if(show)
				{
					for (int i = 0; i < shkronjat.length; i++) 
					{	
			            for (int j = 0; j < shkronjat[i].length; j++) {
			                cipher = cipher + shkronjat[i][j] + " "; 
					}
					cipher = cipher + "\n";
					}
				}
				else
				{	
				for (int i = 0; i < shkronjat.length; i++) 
		            for (int j = 0; j < shkronjat[i].length; j++) 
		                cipher = cipher + shkronjat[i][j]; 
				}
				
				
			}
			else
			{
				if(gjatesiaM < shiritat)
				{
					System.out.println("Gjatësia e mesazhit tuaj është më e vogël sesa numri i shiritave të zgjedhur!");			
				}
				else
				{
					
					String mesazhiPlotesuar = mesazhiEn + "w".repeat(shiritat - plotpjestimi);
					int kolonat = mesazhiPlotesuar.length()/shiritat;
					
					String[][] shkronjat = new String[shiritat][kolonat]; 
					int shkronjaRadhes = 0;
					for(int i = 0; i< shiritat; i++)
					{
						for(int j = 0; j < kolonat; j++)
						{
							shkronjat[i][j]=String.valueOf(mesazhiPlotesuar.charAt(shkronjaRadhes));
							shkronjaRadhes = shkronjaRadhes + shiritat;
							if(j==kolonat-1)
							{
								shkronjaRadhes = i+1;
							}
							
						}
					}
					//JOptionPane.showMessageDialog(null, "Mesazhi i enkriptuar është:");
					if(show)
					{
						for (int i = 0; i < shkronjat.length; i++) 
						{	
				            for (int j = 0; j < shkronjat[i].length; j++) 
				            {
				                cipher = cipher + shkronjat[i][j] + " "; 
				            }    
				            cipher = cipher + "\n";
						}
						
					}
					else
					{	
					for (int i = 0; i < shkronjat.length; i++) 
			            for (int j = 0; j < shkronjat[i].length; j++) 
			                cipher = cipher + shkronjat[i][j]; 
					}
				}
			 
			}
		}
		else 
		{
			System.out.println("Ju duhet të shkruani një mesazh për enkriptim!");
		}
		return cipher;
	}

	
	private static String dekriptoRailFence(String mesazhi, int shiritat, boolean show)
	{
		String mesazhiDe = mesazhi.replaceAll("\\s+", "");
		int gjatesiaM = mesazhiDe.length();
		String plain="";
		if(gjatesiaM > 0)
		{
			int rreshtat = gjatesiaM/shiritat;
			String[][] shkronjat = new String[rreshtat][shiritat]; 
			int shkronjaRadhes = 0;  
			for(int i = 0; i< rreshtat; i++)
			{
				for(int j = 0; j < shiritat; j++)
				{
					shkronjat[i][j]=String.valueOf(mesazhiDe.charAt(shkronjaRadhes));
					shkronjaRadhes = shkronjaRadhes + rreshtat;
					if(j==shiritat-1)
					{
						shkronjaRadhes = i+1; 
					}
					
				}
			}
			
			String mesazhiDekriptuar="";
			if(show)
			{
				for (int i = 0; i < shkronjat.length; i++) 
				{	
		            for (int j = 0; j < shkronjat[i].length; j++)
		            {
		                mesazhiDekriptuar = mesazhiDekriptuar + shkronjat[i][j] + " ";
		            }
		            mesazhiDekriptuar = mesazhiDekriptuar + "\n";
				}
				plain = mesazhiDekriptuar.replace("w", "");
			}
			else {
	        for (int i = 0; i < shkronjat.length; i++) 
	            for (int j = 0; j < shkronjat[i].length; j++) 
	                mesazhiDekriptuar = mesazhiDekriptuar + shkronjat[i][j]; 
	        
	        plain = mesazhiDekriptuar.replace("w", "");
			}
		}
		else
		{
			System.out.println("Ju duhet të shkruani një mesazh për enkriptim!");
		}
		return plain;
	}
	
    public static void railFence(String[] args)
    {
    	String veprimi = args[1];
		int shiritat = 1;
		if(aEshteNr(args[2]))
		{
			shiritat = Integer.valueOf(args[2]);
		}
		else
		{
			System.out.println("Argumenti i trete duhet te jete numer qe tregon se ne sa shirita te ndahet mesazhi!");
			System.exit(0);
		}
		String tekstiHyrje = args[3];
		if(veprimi.contentEquals("encrypt"))
		{
			if(args.length == 5)
			{
				if(args[4].equals("show"))
				{
					System.out.println("Teksti i enkriptuar:");
					System.out.println(enkriptoRailFence(tekstiHyrje, shiritat, true ));
				}
				else
				{
					System.out.println("Per te shfaqur ciphertekstin te organizuar ne shirita argumenti i peste(i fundit) duhet te jete show.");
					System.exit(0);
				}
				
			}
			else if(args.length == 4)
			{
				System.out.println("Teksti i enkriptuar:");
				System.out.println(enkriptoRailFence(tekstiHyrje, shiritat, false));
			}
			else
			{
				System.out.println("Komanda duhet te jete kesisoj: ds rail-fence encrypt <rails> <plaintext>");
				System.out.println("ose");
				System.out.println("Komanda duhet te jete kesisoj: ds rail-fence encrypt <rails> <plaintext> show");
				System.exit(0);
				
			}
		}
		else if(veprimi.contentEquals("decrypt"))
		{
			if(args.length == 5)
			{
				if(args[4].equals("show"))
				{
					System.out.println("Teksti i dekriptuar:");
					System.out.println(dekriptoRailFence(tekstiHyrje, shiritat, true ));
				}
				else
				{
					System.out.println("Per te shfaqur ciphertekstin te organizuar ne shirita argumenti i peste(i fundit) duhet te jete show.");
					System.exit(0);
				}
				
			}
			else if(args.length == 4)
			{
				System.out.println("Teksti i dekriptuar:");
				System.out.println(dekriptoRailFence(tekstiHyrje, shiritat, false ));
			}
			else
			{
				System.out.println("Komanda duhet te jete kesisoj: ds rail-fence decrypt <rails> <plaintext>");
				System.out.println("ose");
				System.out.println("Komanda duhet te jete kesisoj: ds rail-fence decrypt <rails> <plaintext> show");
				System.exit(0);
			}
		}
		else
		{
			System.out.println("Veprimi i caktuar permes argumentit te dyte eshte shkruajtur gabim! Veprimet e mundshme jane encrypt dhe decrypt.");
			System.exit(0);
		}
    }
	

